Ссылки
Ссылка (link) в Linux представляет указатель на файл. Ссылка облегчает поиск нужных файлов. Символическая ссылка ссылается на имя файла. Ее можно использовать для ссылки на файл, который находится где угодно. Однако символическая ссылка зависит от исходного файла. Например, если исходный файл будет удален, символическая ссылка больше не будет работать.
Для создания символической ссылки применяется команду ln с опцией -s. Например, для создния ссылки с именем "myhost" в домашнем каталоге, которая ссылается на файл /etc/hosts, используется следующая команда:
ln -s /etc/hosts ~/myhost

В результате в домашнем каталоге будет создан ярлык с именем "myhost". Этот ярлык относится к файлу "/etc/hosts". И при каждом открытии файла "myhost" фактически будет открываться файл /etc/hosts.
Для просмотра информации о ссылке можно использовать команду ls -l:
ls -l ~/myhost

Первая буква l является сокращением от "link" и указывает, что это ссылка. Кроме того, в выводе выражение /home/eugene/myhost -> /etc/hosts указывает, на какой именно файл ссылается ссылка.
find
Команда find применяется для поиска файлов и каталогов по различным критериям, таким как имя, размер, тип и время изменения. Например, найдем все файлы с расширением .txt в каталоге Documents текущего пользователя и его подкаталогах:
find  ~/Documents -name "*.txt"
Первый аргумент команды — это начальный каталог поиска. А параметр -name используется для указания соответствующего шаблона имени файла. Символ * — это подстановочный знак, который соответствует любому количеству символов, а *.txt соответствует всем файлам, оканчивающимся на ".txt".
Команда find позволяет не только находить файлы по их именам. Например, можно найти файлы по их размеру, владельцу, разрешениям и многим другим параметрам. Опции для поиска файлов:
-amin n: находит все файлы, к которым последний раз обращались менее n минут назад. Например, find -amin 5 выдаст все файлы, к которым обращались менее пяти минут назад.
-executable: находит все исполняемые файлы.
-group name: показывает все файлы, владельцем группы которых является пользователь с логином "name".
-mmin n: показывает все файлы, которые последний раз были изменены менее n минут назад.
-newer file показывает все файлы новее, чем файл file.
-nogroup, -nouser: показать все файлы, у которых нет группы или владельца.
-perm mode: находит все файлы, для которых установлен режим разрешений .mode
-size n: находит все файлы размера n. С помощью этого параметра также можно найти файлы больше или меньше определенного размера. Например, команда find / -size +2G позволит найти все файлы размером более 2 гигабайт. При использовании этого параметра также применяются K, M и G для килобайтов, мегабайтов и гигабайтов соответственно. Знак + позволяет задать поиск файлов, размер которых превышает определенный.
-type t: находит файлы определенного типа. Наиболее интересные типы файлов, которые вы можете искать с помощью этой опции, — это d для каталога или f для обычного файла (то есть любого файла, не являющегося каталогом).
Также можно комбинировать разные варианты, например, найти все файлы пользователя eugene, размером более 100 МБ:
find ~ -user eugene -size +100M
whereis
Команда whereis применяется для поиска бинарных, исходных файлов и файлов страниц руководств для определенной команды. Например, найдем местоположение команды find. Или найдем местоположение команды "gcc" (компилятора языка Си). (whereis find / whereis gcc)
Команда mount в общем случае предназначена для ручного монтирования устройств (например, подключаемых по USB) в систему.  Для отключения устройства применяется команда umount. Эта команда может принимать два аргумента: имя устройства или имя каталога, в котором устройство смонтировано. Например:
umount /dev/sda1
В этом случае для завершения процессов, связанных с устройством, можно использовать команду fuser -km, которой передается название устройства
fuser -km /dev/sda1
Команда mount позволяет вывести информацию обо всех примонтированных устройствах.
Для обзора реальных смонтированных файловых систем применяется команда df –h.
Команда lsblk отображает все устройства, достпные в текущий момент на компьютере.
Основным элементом жесткого диска/ssd являются разделы, которые представляют собой некотрые участки диска. Список всех разделов на дисках хранится в файле /proc/partitions:
cat /proc/partitions
Для управления дисками и разделами применяется ряд утилит, в частности, fdisk и gdisk. С помощью параметра -l можно посмотреть информацию по определенному диску, в частности, его разделы. Например, посмотрим информацию по какому-нибудь диску:
sudo fdisk -l /dev/nvme1n1
Здесь видно, что на диске 2 раздела: /dev/nvme1n1p1 и /dev/nvme1n1p2. Можно увидеть начало и конец раздела, количество секторов, размер, тип системы и т.д.
Аналогичную информацию можно получить с помощью утилиты gdisk:
sudo gdisk -l /dev/nvme1n1
Текстовые файлы играют важную роль в Linux. Это могут быть различные файлы конфигурации, логи и т.д. И Linux предоставляет инструментарий для работы с текстовыми файлами. Распространенные команды для вывода содержимого файлов:
cat: отображает содержимое файла.
tac: делает то же самое, что и cat, но отображает содержимое в обратном порядке.
tail: показывает только последние строки текстового файла.
head: отображает первые строки файла.
less: открывает расширенную программу просмотра файлов.
more: то же самое, что и less, только с меньшими возможностями.
Например, выведем с помощью команды cat файл /etc/hosts:
cat /etc/hosts
Команда tac отобразит все строки в обратном порядке:
tac /etc/hosts
Команда tail отображает последние строки файла (по умолчанию 10 последних). Но также ей можно передать конкретное количество строк (с конца). Например, вывелем три последние строки:
tail -3 /etc/hosts
Команда head аналогична tail, только отображает первые строки файла (по умолчанию 10 первых). И она также может принимать конкретное количество строк (с конца). Например, вывелем три первых строки:
head -3 /etc/hosts
Комбинируя команды head и tail, можно получить определенную строку или опеределенный набор строк с начала или конца. Например, получим только 2-ю строку:
head -n 2 /etc/hosts | tail -n 1
В данном случае выражение head -n 2 /etc/hosts сначала выбирает из файла 2 первых строки. Далее эти 2 строки передаются команде tail -n 1, которая выбирает из них последнюю (то есть фактически 2-ю строку).
Команда less открывает файл в специальном окружении, которое напоминает встроенный текстовый редактор vi:
less /etc/hosts
Для выхода из окружения просмотра файла нажмем на q.
Стоит отметить, что вывод других команд также по сути представляет собой текст, и этот текст мы также можем обрабатывать с помощью текстовых команд. Например, при выводе списока файлов и каталогов получим только последние 2 строки:
ls -l | tail -n 2
Команда tr применяется для преобразования или удаления символов из файла. Распространенный сценарий использования tr — перевод строчных букв в прописные.
cat test.txt | tr a-z A-Z
Как видно, команда tr применяется к строкам из файла test.txt, которые считываются командой cat. В данном случае команда tr преобразует все символы диапазона a–z в соответствующие символы из диапазона A–Z
Преобразованный результат затем можно записать в другой файл:
cat test.txt | tr a-z A-Z > test2.txt
Для сортировки строк в файле применяется команда sort:

cat test.txt | sort
Аналогично можно отсортировать вывод других команд, например, список файлов и каталогов:
ls | sort
По умолчанию команда сортирует строки в лексикографическом порядке. Однако с числами подобная сортировка может давать некорректные результаты. И в этом случае мы можем использовать флаг -n:
cat test.txt | sort -n
Команда cut. Получение определенной информации
Команда cut позволяет получить из структурированного файла определенный кусок информации. Это похоже на работу с таблицами, где мы хотим получить данные определенных столбцов. Данная команда принимает ряд опций, из которых отмечу основные:
	-d: представляет разделитель данных в строке
	-f: представляет список номеров полей для вывода. Список полей можно задать с помощью одного из следующих форматов:
	N: выводит поле с номером N (нумерация начинается с 1)
	N-: определяет диапазон полей, который начинается с номера N и заканчивается последним полем
	N-M: определяет диапазон полей от N до M
	-M: определяет диапазон полей, который начинается с первого поля и заканчивается полем с номером M
Условно говоря, каждая строка содержит данные пользователя - имя, возраст, компанию, то есть три поля. И каждое поле отделено от других двоеточием. И допустим, нам надо получить имена пользователей:
cut -d : -f 1 test.txt
Здесь опция -d указывает, что разделитель - двоеточие, а опция -f указывает, что надо получить 1-е поле.
Выведем 1 и 3 -е поля:
cut -d : -f 1,3 test.txt
